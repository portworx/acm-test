# SOURCE: https://edge-install.portworx.com/2.6?mc=false&kbver=1.17.14-gke.400&oem=esse&user=2d431cbc-151f-11eb-bbaa-32b4258e357f&b=true&s=%22type%3Dpd-standard%2Csize%3D150%22&kd=type%3Dpd-standard%2Csize%3D150&c=px-cluster-5d9d44d2-81ca-41b4-98b5-c849e826bdbd&acr=cluster-a-selector&stork=true&lh=true&st=k8s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
  name: stork-account
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
  labels:
    tier: control-plane
  name: stork
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: stork
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 3
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: stork
        tier: control-plane
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - stork
              topologyKey: "kubernetes.io/hostname"
      hostPID: false
      containers:
      - command:
        - /stork
        - --driver=pxd
        - --verbose
        - --leader-elect=true
        - --health-monitor-interval=120
        - --webhook-controller=false
        image: openstorage/stork:2.6.0
        imagePullPolicy: Always
        env:
        - name: "PX_SERVICE_NAME"
          value: "portworx-api"
        resources:
          requests:
            cpu: '0.1'
        name: stork
      serviceAccountName: stork-account
---
kind: Service
apiVersion: v1
metadata:
  name: stork-service
  namespace: kube-system
  annotations:
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
spec:
  selector:
    name: stork
  ports:
    - name: extender
      protocol: TCP
      port: 8099
      targetPort: 8099
    - name: webhook
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stork-config
  namespace: kube-system
  annotations:
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
data:
  policy.cfg: |-
    {
      "kind": "Policy",
      "apiVersion": "v1",
      "extenders": [
        {
          "urlPrefix": "http://stork-service.kube-system:8099",
          "apiVersion": "v1beta1",
          "filterVerb": "filter",
          "prioritizeVerb": "prioritize",
          "weight": 5,
          "enableHttps": false,
          "nodeCacheCapable": false,
          "httpTimeout": 300000000000
        }
      ]
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
  name: stork-scheduler-account
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmanagement.gke.io/cluster-selector: "cluster-a-selector"
  labels:
    component: scheduler
    tier: control-plane
    name: stork-scheduler
  name: stork-scheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: stork-scheduler
  replicas: 3
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        name: stork-scheduler
      name: stork-scheduler
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - stork-scheduler
              topologyKey: "kubernetes.io/hostname"
      hostPID: false
      containers:
        - command:
          - /usr/local/bin/kube-scheduler
          - --address=0.0.0.0
          - --leader-elect=true
          - --scheduler-name=stork
          - --policy-configmap=stork-config
          - --policy-configmap-namespace=kube-system
          - --lock-object-name=stork-scheduler
          image: k8s.gcr.io/kube-scheduler-amd64:v1.17.14
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10251
            initialDelaySeconds: 15
          name: stork-scheduler
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10251
          resources:
            requests:
              cpu: '0.1'
      serviceAccountName: stork-scheduler-account  